{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/project/determineTilingType.ts","webpack:///./node_modules/gl-matrix/esm/common.js","webpack:///./node_modules/gl-matrix/esm/mat4.js","webpack:///./node_modules/gl-matrix/esm/vec3.js","webpack:///./node_modules/gl-matrix/esm/index.js","webpack:///./src/webgl/Geometry.ts","webpack:///./src/webgl/OrthoScreenObject.ts","webpack:///./src/webgl/ProgramObject.ts","webpack:///./src/webgl/UniformBufferObject.ts","webpack:///./src/project/RenderQuiltProgramUniform.ts","webpack:///./src/project/RenderQuiltProgram.ts","webpack:///./src/project/HoloPlay.ts","webpack:///./src/Main.ts"],"names":[],"mappings":"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AmB;;AAEnC,MAAM,UAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP,gBAAgB,UAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP,gBAAgB,UAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO,SAAS,UAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,OAAgB;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA,YAAY,OAAgB;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,aAAa,KAAK;AAClB;;AAEO;AACP,wBAAwB,UAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;;AAExD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,YAAY,KAAK;AACjB;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB;AACA,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,OAAgB,+BAA+B,OAAgB,+BAA+B,OAAgB;AAC/I;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;;AAEO,SAAS,WAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAgB,qEAAqE,OAAgB,qEAAqE,OAAgB,qEAAqE,OAAgB,qEAAqE,OAAgB,qEAAqE,OAAgB,qEAAqE,OAAgB,qEAAqE,OAAgB,qEAAqE,OAAgB,qEAAqE,OAAgB,uEAAuE,OAAgB,yEAAyE,OAAgB,yEAAyE,OAAgB,yEAAyE,OAAgB,yEAAyE,OAAgB,yEAAyE,OAAgB;AAC/zC;AACA;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO,mB;;ACzwDiC;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;;AAEO,SAAS,WAAM;AACtB,gBAAgB,UAAmB;;AAEnC,MAAM,UAAmB;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO,SAAS,UAAK;AACrB,gBAAgB,UAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;;AAEO,SAAS,WAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO,SAAS,eAAU;AAC1B,gBAAgB,UAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO,SAAS,SAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO,SAAS,QAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO,SAAS,QAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO,SAAS,aAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO,SAAS,aAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO,SAAS,UAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA,UAAU,MAAe;AACzB,UAAU,MAAe;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO,SAAS,YAAO;AACvB;AACA,aAAa;;AAEb;AACA;AACA,qBAAqB;;AAErB;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO,SAAS,YAAO;AACvB;AACA,aAAa;;AAEb;AACA;AACA,qBAAqB;;AAErB;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO,SAAS,YAAO;AACvB;AACA,aAAa;;AAEb;AACA;AACA,qBAAqB;;AAErB;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;;AAEO;AACP,cAAc,eAAU;AACxB,cAAc,eAAU;AACxB;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;;AAEO,SAAS,QAAG;AACnB;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;;AAEO,SAAS,gBAAW;AAC3B;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;;AAEO,SAAS,WAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAgB,qEAAqE,OAAgB,qEAAqE,OAAgB;AACxN;AACA;AACA,cAAc;AACd;AACA;;AAEO,IAAI,QAAG,GAAG,aAAQ;AACzB;AACA,cAAc;AACd;AACA;;AAEO,IAAI,QAAG,GAAG,aAAQ;AACzB;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO,IAAI,QAAG,GAAG,WAAM;AACvB;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA;AACA;AACA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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"js/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","/*!\r\n * Utility function to determine the division number of given quilt image using autocorrelation\r\n *\r\n * This algorithm thanks to LookingGlassQuiltViewer by kirurobo\r\n * refer to: https://github.com/kirurobo/LookingGlassQuiltViewer\r\n */\r\n\r\nconst QUILT_PRESET_LIST:QuiltPreset[] = [\r\n  {\r\n    name:'Standard',\r\n    width:2048,\r\n    height:2048,\r\n    tilesX:4,\r\n    tilesY:8\r\n  },\r\n  {\r\n    name:'High Res',\r\n    width:4096,\r\n    height:4096,\r\n    tilesX:5,\r\n    tilesY:9\r\n  },\r\n  {\r\n    name:'High View',\r\n    width:4096,\r\n    height:4096,\r\n    tilesX:6,\r\n    tilesY:10\r\n  },\r\n  {\r\n    name:'Extra Low',\r\n    width:1600,\r\n    height:1600,\r\n    tilesX:4,\r\n    tilesY:6\r\n  }\r\n];\r\n\r\nconst canvas2D:HTMLCanvasElement = document.createElement('canvas');\r\nconst context2D:CanvasRenderingContext2D = canvas2D.getContext('2d');\r\n\r\nexport function determineTilingType(image:HTMLImageElement):{tilesX:number, tilesY:number}\r\n{\r\n  const canditateList:QuiltPreset[] = [];\r\n  for(let i:number = 0; i < QUILT_PRESET_LIST.length; i++)\r\n  {\r\n    const preset:QuiltPreset = QUILT_PRESET_LIST[i];\r\n    if(preset.height === image.height && preset.width === image.width)\r\n    {\r\n      // 画像サイズがプリセットのサイズと一致すれば候補とする\r\n      canditateList.push(preset);\r\n    }\r\n    else\r\n    {\r\n      // サイズが一致しなければ、そのtileX,tileYでサイズを合わせた候補を作成\r\n      canditateList.push(\r\n        {\r\n          name:'Custom ' + preset.tilesX + 'x' + preset.tilesY,\r\n          tilesX:preset.tilesX,\r\n          tilesY:preset.tilesY,\r\n          width:image.width,\r\n          height:image.height\r\n        });\r\n    }\r\n  }\r\n\r\n  // どれも候補に残らなければ初期指定のTilingにしておく\r\n  if(!canditateList.length)\r\n  {\r\n    return {\r\n      tilesX:QUILT_PRESET_LIST[0].tilesX,\r\n      tilesY:QUILT_PRESET_LIST[0].tilesY\r\n    };\r\n  }\r\n\r\n  // テクスチャを配列に取得\r\n  canvas2D.width = image.width;\r\n  canvas2D.height = image.height;\r\n  context2D.drawImage(image, 0, 0);\r\n  const pixelData:Uint8ClampedArray = context2D.getImageData(0, 0, image.width, image.height).data;\r\n\r\n  // Tiling候補ごとの自己相関を求める\r\n  const score:number[] = [];\r\n\r\n  // 相関をとる周期の調整値。1だと全ピクセルについて相関をとるが遅い。\r\n  const skip:number = Math.max(image.width >> 9, 1);\r\n\r\n  for(let i:number = 0; i < canditateList.length; i++)\r\n  {\r\n    const preset:QuiltPreset = canditateList[i];\r\n    const tileSizeX:number = (preset.width / preset.tilesX) << 0;\r\n    const tileSizeY:number = (preset.height / preset.tilesY) << 0;\r\n    const numViews:number = preset.tilesX * preset.tilesY;\r\n    score[i] = 0;\r\n    for(let v:number = 0; v < tileSizeY; v += skip)\r\n    {\r\n      for(let u:number = 0; u < tileSizeX; u += skip)\r\n      {\r\n        // 中央タイルの画素を平均値の代わりに利用する\r\n        //   （各タイル間ではわずかな違いしかないという前提）\r\n        const centerTileX:number = preset.tilesX >> 1;\r\n        const centerTileY:number = preset.tilesY >> 1;\r\n        const pixel:number = (centerTileY * tileSizeY + v) * image.width + (centerTileX * tileSizeX + u);\r\n        // 輝度を計算\r\n        const averageL:number = 0.299 * pixelData[pixel * 4] + 0.587 * pixelData[pixel * 4 + 1] + 0.114 * pixelData[pixel * 4 + 2];\r\n\r\n        let variance:number = 0.0;\r\n        for(let y:number = 0; y < preset.tilesY; y++)\r\n        {\r\n          for(let x:number = 0; x < preset.tilesX; x++)\r\n          {\r\n            const pixel:number = (y * tileSizeY + v) * image.width + (x * tileSizeX + u);\r\n            // 輝度の差分を計算\r\n            const diffL:number = (0.299 * pixelData[pixel * 4] + 0.587 * pixelData[pixel * 4 + 1] + 0.114 * pixelData[pixel * 4 + 2]) - averageL;\r\n            variance += diffL * diffL;\r\n          }\r\n        }\r\n        score[i] += variance;\r\n      }\r\n    }\r\n  }\r\n\r\n  // 最も相関が高かったプリセットを選択\r\n  let selectedIndex:number = 0;\r\n  let minScore:number = Number.MAX_VALUE;\r\n  for(let i:number = 0; i < canditateList.length; i++)\r\n  {\r\n    // console.log(canditateList[i].name + ' : ' + score[i]);\r\n\r\n    if(minScore > score[i])\r\n    {\r\n      selectedIndex = i;\r\n      minScore = score[i];\r\n    }\r\n  }\r\n\r\n  const quiltConfig:QuiltPreset = canditateList[selectedIndex];\r\n  // console.log(quiltConfig.name, quiltConfig.tilesX, quiltConfig.tilesY);\r\n\r\n  return {\r\n    tilesX:quiltConfig.tilesX,\r\n    tilesY:quiltConfig.tilesY\r\n  };\r\n}\r\n\r\ndeclare interface QuiltPreset\r\n{\r\n  name:string;\r\n  width:number;\r\n  height:number;\r\n  tilesX:number;\r\n  tilesY:number;\r\n}","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  var trace = mat[0] + mat[5] + mat[10];\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat2 from \"./mat2.js\";\nimport * as mat2d from \"./mat2d.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as mat4 from \"./mat4.js\";\nimport * as quat from \"./quat.js\";\nimport * as quat2 from \"./quat2.js\";\nimport * as vec2 from \"./vec2.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","import {ProgramObject, ShaderAttribute} from './ProgramObject';\r\n\r\nexport class Geometry\r\n{\r\n  protected _numAttributes:number;\r\n\r\n  public get numAttributes():number\r\n  {\r\n    return this._numAttributes;\r\n  }\r\n\r\n  protected _numVertices:number;\r\n\r\n  public get numVertices():number\r\n  {\r\n    return this._numVertices;\r\n  }\r\n\r\n  protected _numIndices:number;\r\n\r\n  public get numIndices():number\r\n  {\r\n    return this._numIndices;\r\n  }\r\n\r\n  protected _indexBuffer:WebGLBuffer;\r\n\r\n  public get indexBuffer():WebGLBuffer\r\n  {\r\n    return this._indexBuffer;\r\n  }\r\n\r\n  protected vboList:VertexAttribute[];\r\n\r\n  constructor()\r\n  {\r\n    this.vboList = [];\r\n  }\r\n\r\n  public createBuffer(gl:WebGLRenderingContext):void\r\n  {\r\n  }\r\n\r\n  public bindBuffer(gl2:WebGL2RenderingContext, program:ProgramObject):void\r\n  {\r\n    this.bindVertexBuffer(gl2, program);\r\n    this.bindIndexBuffer(gl2);\r\n  }\r\n\r\n  public bindVertexBuffer(gl2:WebGL2RenderingContext, program:ProgramObject):void\r\n  {\r\n    const length:number = program.attributeList.length;\r\n    for(let i:number = 0; i < length; i++)\r\n    {\r\n      const shaderAttibute:ShaderAttribute = program.attributeList[i];\r\n      if(shaderAttibute.location >= 0)\r\n      {\r\n        let vertexAttribute:VertexAttribute = this.getVertexBuffer(shaderAttibute.name);\r\n        if(vertexAttribute)\r\n        {\r\n          gl2.bindBuffer(gl2.ARRAY_BUFFER, vertexAttribute.buffer);\r\n          gl2.enableVertexAttribArray(shaderAttibute.location);\r\n          gl2.vertexAttribPointer(shaderAttibute.location, shaderAttibute.stride, gl2.FLOAT, false, vertexAttribute.byteStride, vertexAttribute.bufferOffset);\r\n\r\n          if(vertexAttribute.divisor > 0)\r\n          {\r\n            gl2.vertexAttribDivisor(shaderAttibute.location, vertexAttribute.divisor);\r\n          }\r\n          else\r\n          {\r\n            gl2.vertexAttribDivisor(shaderAttibute.location, 0);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public bindIndexBuffer(gl:WebGLRenderingContext):void\r\n  {\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);\r\n  }\r\n\r\n  public getVertexBuffer(attributeName:string):VertexAttribute\r\n  {\r\n    const length:number = this.vboList.length;\r\n    for(let i:number = 0; i < length; i++)\r\n    {\r\n      let attribute:VertexAttribute = this.vboList[i];\r\n      if(attribute.name === attributeName)\r\n      {\r\n        return attribute;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport interface VertexAttribute\r\n{\r\n  name:string;\r\n  byteStride:number;\r\n  bufferOffset:number;\r\n  buffer:WebGLBuffer;\r\n  divisor:number;\r\n}","import {mat4, vec3} from 'gl-matrix';\r\nimport {Geometry, VertexAttribute} from './Geometry';\r\n\r\nexport class OrthoScreenObject extends Geometry\r\n{\r\n  protected _bufferData:Float32Array;\r\n\r\n  public get bufferData():Float32Array\r\n  {\r\n    return this._bufferData;\r\n  }\r\n\r\n  protected _indeces:Uint16Array;\r\n\r\n  public get indeces():Uint16Array\r\n  {\r\n    return this._indeces;\r\n  }\r\n\r\n  public _screenMatrix:mat4;\r\n\r\n  public get screenMatrix():mat4\r\n  {\r\n    return this._screenMatrix;\r\n  }\r\n\r\n  constructor()\r\n  {\r\n    super();\r\n    this.init();\r\n  }\r\n\r\n  public init():void\r\n  {\r\n    this._bufferData = new Float32Array([\r\n      -1.0, 1.0, 0.0, /**/ 0.0, 0.0,\r\n      1.0, 1.0, 0.0, /**/ 1.0, 0.0,\r\n      -1.0, -1.0, 0.0, /**/ 0.0, 1.0,\r\n      1.0, -1.0, 0.0, /**/ 1.0, 1.0,\r\n    ]);\r\n    this._indeces = new Uint16Array([\r\n      0, 1, 2,\r\n      3, 2, 1\r\n    ]);\r\n    this._numIndices = this._indeces.length;\r\n\r\n    const viewMtx:mat4 = mat4.identity(mat4.create());\r\n    const projectionMtx:mat4 = mat4.identity(mat4.create());\r\n    this._screenMatrix = mat4.identity(mat4.create());\r\n    mat4.lookAt(viewMtx, vec3.fromValues(0.0, 0.0, 0.5), vec3.fromValues(0.0, 0.0, 0.0), vec3.fromValues(0.0, 1.0, 0.0));\r\n    mat4.ortho(projectionMtx, -1.0, 1.0, 1.0, -1.0, 0.1, 1);\r\n    mat4.multiply(this._screenMatrix, projectionMtx, viewMtx);\r\n  }\r\n\r\n  public createBuffer(gl:WebGLRenderingContext):void\r\n  {\r\n    let buffer:WebGLBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this._bufferData), gl.STATIC_DRAW);\r\n\r\n    const positionAttribute:VertexAttribute = {\r\n      name:'position',\r\n      byteStride:20,\r\n      bufferOffset:0,\r\n      buffer:buffer,\r\n      divisor:-1\r\n    };\r\n    this.vboList.push(positionAttribute);\r\n\r\n    const uvAttribute:VertexAttribute = {\r\n      name:'uv',\r\n      byteStride:20,\r\n      bufferOffset:12,\r\n      buffer:buffer,\r\n      divisor:-1\r\n    };\r\n    this.vboList.push(uvAttribute);\r\n\r\n    this._indexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this._indeces, gl.STATIC_DRAW);\r\n  }\r\n}\r\n","import {mat4, vec2, vec3, vec4} from 'gl-matrix';\r\nimport {UniformBufferObject} from './UniformBufferObject';\r\n\r\nexport class ProgramObject\r\n{\r\n  protected _program:WebGLProgram;\r\n\r\n  public get program():WebGLProgram\r\n  {\r\n    return this._program;\r\n  }\r\n\r\n  protected _attributeList:ShaderAttribute[];\r\n\r\n  public get attributeList():ShaderAttribute[]\r\n  {\r\n    return this._attributeList;\r\n  }\r\n\r\n  protected _uniformBufferObjectList:UniformBufferObject[];\r\n\r\n  public get uniformBufferObjectList():UniformBufferObject[]\r\n  {\r\n    return this._uniformBufferObjectList;\r\n  }\r\n\r\n  protected _uniformList:ShaderUniform[];\r\n\r\n  public get uniformList():ShaderUniform[]\r\n  {\r\n    return this._uniformList;\r\n  }\r\n\r\n  protected _vertexShaderSource:string;\r\n  protected _fragmentShaderSource:string;\r\n\r\n  constructor()\r\n  {\r\n    this._uniformBufferObjectList = [];\r\n    this._uniformList = [];\r\n    this._attributeList = [];\r\n    this.init();\r\n  }\r\n\r\n  protected init():void\r\n  {\r\n\r\n  }\r\n\r\n  public creatProgram(gl2:WebGL2RenderingContext):void\r\n  {\r\n    const vShader:WebGLShader = this.creatShader(gl2, this._vertexShaderSource, gl2.VERTEX_SHADER);\r\n    const fShader:WebGLShader = this.creatShader(gl2, this._fragmentShaderSource, gl2.FRAGMENT_SHADER);\r\n\r\n    this._program = gl2.createProgram();\r\n    gl2.attachShader(this._program, vShader);\r\n    gl2.attachShader(this._program, fShader);\r\n\r\n    gl2.linkProgram(this._program);\r\n\r\n    let i:number;\r\n    let length:number;\r\n\r\n    length = this._attributeList.length;\r\n    for(i = 0; i < length; i++)\r\n    {\r\n      const attribute:ShaderAttribute = this._attributeList[i];\r\n      if(attribute.location === -1)\r\n      {\r\n        attribute.location = gl2.getAttribLocation(this._program, attribute.name);\r\n      }\r\n    }\r\n\r\n    length = this._uniformBufferObjectList.length;\r\n    for(i = 0; i < length; i++)\r\n    {\r\n      const uniform:UniformBufferObject = this._uniformBufferObjectList[i];\r\n      uniform.index = gl2.getUniformBlockIndex(this._program, uniform.name);\r\n    }\r\n\r\n    length = this._uniformList.length;\r\n    for(i = 0; i < length; i++)\r\n    {\r\n      const uniform:ShaderUniform = this._uniformList[i];\r\n      uniform.location = gl2.getUniformLocation(this._program, uniform.name);\r\n    }\r\n  }\r\n\r\n  private creatShader(gl:WebGLRenderingContext, source:string, type:number):WebGLShader\r\n  {\r\n    const shader:WebGLShader = gl.createShader(type);\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n\r\n    if(gl.getShaderParameter(shader, gl.COMPILE_STATUS))\r\n    {\r\n      return shader;\r\n    }\r\n    else\r\n    {\r\n      console.log(type === gl.VERTEX_SHADER, gl.getShaderInfoLog(shader));\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public bindShader(gl2:WebGL2RenderingContext):void\r\n  {\r\n    this.bindProgram(gl2);\r\n    this.bindUniformObject(gl2);\r\n    this.bindUniform(gl2);\r\n  }\r\n\r\n  public bindProgram(gl:WebGLRenderingContext):void\r\n  {\r\n    if(gl.getProgramParameter(this._program, gl.LINK_STATUS))\r\n    {\r\n      gl.useProgram(this._program);\r\n    }\r\n    else\r\n    {\r\n      console.log(gl.getProgramInfoLog(this._program));\r\n    }\r\n  }\r\n\r\n  public bindUniformObject(gl2:WebGL2RenderingContext):void\r\n  {\r\n    const length:number = this._uniformBufferObjectList.length;\r\n    for(let i:number = 0; i < length; i++)\r\n    {\r\n      const uniform:UniformBufferObject = this._uniformBufferObjectList[i];\r\n      gl2.bindBufferBase(gl2.UNIFORM_BUFFER, uniform.binding, uniform.buffer);\r\n      gl2.uniformBlockBinding(this.program, uniform.index, uniform.binding);\r\n    }\r\n  }\r\n\r\n  public bindUniform(gl:WebGLRenderingContext):void\r\n  {\r\n    const length:number = this.uniformList.length;\r\n    for(let i:number = 0; i < length; i++)\r\n    {\r\n      const uniform:ShaderUniform = this.uniformList[i];\r\n      switch(uniform.type)\r\n      {\r\n        case UniformType.MATRIX4:\r\n          gl.uniformMatrix4fv(uniform.location, false, uniform.matrix4);\r\n          break;\r\n        case UniformType.FLOAT:\r\n          gl.uniform1f(uniform.location, uniform.float);\r\n          break;\r\n        case UniformType.VECTOR2:\r\n          gl.uniform2fv(uniform.location, uniform.vector2);\r\n          break;\r\n        case UniformType.VECTOR3:\r\n          gl.uniform3fv(uniform.location, uniform.vector3);\r\n          break;\r\n        case UniformType.VECTOR4:\r\n          gl.uniform4fv(uniform.location, uniform.vector4);\r\n          break;\r\n        case UniformType.TEXTURE:\r\n          gl.uniform1i(uniform.location, uniform.textureIndex);\r\n          gl.activeTexture(gl['TEXTURE' + uniform.textureIndex]);\r\n          gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public getUniform(uniformName:string):ShaderUniform\r\n  {\r\n    const length:number = this._uniformList.length;\r\n    for(let i:number = 0; i < length; i++)\r\n    {\r\n      const uniform:ShaderUniform = this._uniformList[i];\r\n      if(uniform.name === uniformName)\r\n      {\r\n        return uniform;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public getUniformBufferObject(uniformName:string):UniformBufferObject\r\n  {\r\n    const length:number = this._uniformBufferObjectList.length;\r\n    for(let i:number = 0; i < length; i++)\r\n    {\r\n      const uniform:UniformBufferObject = this._uniformBufferObjectList[i];\r\n      if(uniform.name === uniformName)\r\n      {\r\n        return uniform;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport interface ShaderAttribute\r\n{\r\n  name:string;\r\n  stride:number;\r\n  location:number;\r\n}\r\n\r\nexport interface ShaderUniform\r\n{\r\n  type:UniformType;\r\n  name:string;\r\n  location:WebGLUniformLocation;\r\n  float?:number;\r\n  vector2?:vec2;\r\n  vector3?:vec3;\r\n  vector4?:vec4;\r\n  matrix4?:mat4;\r\n  texture?:WebGLTexture;\r\n  textureIndex?:number;\r\n}\r\n\r\nexport declare const enum UniformType\r\n{\r\n  'FLOAT',\r\n  'VECTOR2',\r\n  'VECTOR3',\r\n  'VECTOR4',\r\n  'MATRIX4',\r\n  'TEXTURE'\r\n}\r\n","export class UniformBufferObject\r\n{\r\n  protected _name:string;\r\n\r\n  public get name():string\r\n  {\r\n    return this._name;\r\n  }\r\n\r\n  protected _index:number;\r\n\r\n  public get index():number\r\n  {\r\n    return this._index;\r\n  }\r\n\r\n  public set index(value:number)\r\n  {\r\n    this._index = value;\r\n  }\r\n\r\n  protected _binding:number;\r\n\r\n  public get binding():number\r\n  {\r\n    return this._binding;\r\n  }\r\n\r\n  public set binding(value:number)\r\n  {\r\n    this._binding = value;\r\n  }\r\n\r\n  protected _bufferData:Float32Array;\r\n\r\n  public get bufferData():Float32Array\r\n  {\r\n    return this._bufferData;\r\n  }\r\n\r\n  protected _bufferDataLength:number;\r\n\r\n  public get bufferDataLength():number\r\n  {\r\n    return this._bufferDataLength;\r\n  }\r\n\r\n  protected _buffer:WebGLBuffer;\r\n\r\n  public get buffer():WebGLBuffer\r\n  {\r\n    return this._buffer;\r\n  }\r\n\r\n  constructor(name:string, binding:number)\r\n  {\r\n    this._name = name;\r\n    this._binding = binding;\r\n  }\r\n\r\n  public createBuffer(gl2:WebGL2RenderingContext):void\r\n  {\r\n    this._buffer = gl2.createBuffer();\r\n    this._bufferData = new Float32Array(this._bufferDataLength);\r\n\r\n    gl2.bindBuffer(gl2.UNIFORM_BUFFER, this._buffer);\r\n    gl2.bufferData(gl2.UNIFORM_BUFFER, this._bufferData, gl2.DYNAMIC_DRAW);\r\n    gl2.bindBuffer(gl2.UNIFORM_BUFFER, null);\r\n  }\r\n\r\n  public updateBuffer(gl2:WebGL2RenderingContext):void\r\n  {\r\n    gl2.bindBuffer(gl2.UNIFORM_BUFFER, this._buffer);\r\n    gl2.bufferSubData(gl2.UNIFORM_BUFFER, 0, this._bufferData);\r\n    gl2.bindBuffer(gl2.UNIFORM_BUFFER, null);\r\n  }\r\n\r\n  protected _copyData(data:Float32Array, offset:number, count:number):void\r\n  {\r\n    for(let i:number = 0; i < count; i++)\r\n    {\r\n      this._bufferData[offset + i] = data[i];\r\n    }\r\n  }\r\n\r\n  protected _copyNumberData(data:number, offset:number):void\r\n  {\r\n    this._bufferData[offset] = data;\r\n  }\r\n}\r\n","import {UniformBufferObject} from '../webgl/UniformBufferObject';\r\n\r\nexport class RenderQuiltProgramUniform extends UniformBufferObject\r\n{\r\n  public static readonly BUFFER_LENGTH:number = 12;\r\n\r\n  // Layout\r\n  // 0     = float pitch\r\n  // 1     = float tilt\r\n  // 2     = float center\r\n  // 3     = float invView\r\n\r\n  // 4-5   = vec2 flip\r\n  // 6-7   = vec2 tiles\r\n\r\n  // 8     = float subp\r\n  // 9-11  = float padding\r\n\r\n  public get pitch():number\r\n  {\r\n    return this._bufferData[0];\r\n  }\r\n\r\n  public set pitch(value:number)\r\n  {\r\n    this._copyNumberData(value, 0);\r\n  }\r\n\r\n  public get tilt():number\r\n  {\r\n    return this._bufferData[1];\r\n  }\r\n\r\n  public set tilt(value:number)\r\n  {\r\n    this._copyNumberData(value, 1);\r\n  }\r\n\r\n  public get center():number\r\n  {\r\n    return this._bufferData[2];\r\n  }\r\n\r\n  public set center(value:number)\r\n  {\r\n    this._copyNumberData(value, 2);\r\n  }\r\n\r\n  public get invView():number\r\n  {\r\n    return this._bufferData[3];\r\n  }\r\n\r\n  public set invView(value:number)\r\n  {\r\n    this._copyNumberData(value, 3);\r\n  }\r\n\r\n  public get flip():Float32Array\r\n  {\r\n    return this._bufferData.subarray(4, 6);\r\n  }\r\n\r\n  public set flip(value:Float32Array)\r\n  {\r\n    this._copyData(value, 4, 2);\r\n  }\r\n\r\n  public get tiles():Float32Array\r\n  {\r\n    return this._bufferData.subarray(6, 8);\r\n  }\r\n\r\n  public set tiles(value:Float32Array)\r\n  {\r\n    this._copyData(value, 6, 2);\r\n  }\r\n\r\n  public get subp():number\r\n  {\r\n    return this._bufferData[8];\r\n  }\r\n\r\n  public set subp(value:number)\r\n  {\r\n    this._copyNumberData(value, 8);\r\n  }\r\n\r\n  constructor(name:string, binding:number)\r\n  {\r\n    super(name, binding);\r\n    this._bufferDataLength = RenderQuiltProgramUniform.BUFFER_LENGTH;\r\n  }\r\n}\r\n","/*!\r\n * Copyright 2017-2019 Looking Glass Factory Inc.\r\n * All rights reserved.\r\n *\r\n * This algorithm thanks to HoloPlay.js by Looking Glass Factory Inc\r\n * refer to: https://lookingglassfactory.com/downloads/three-js-library-looking-glass/\r\n */\r\n\r\nimport {ProgramObject, ShaderUniform, UniformType} from '../webgl/ProgramObject';\r\nimport {RenderQuiltProgramUniform} from './RenderQuiltProgramUniform';\r\n\r\nexport class RenderQuiltProgram extends ProgramObject\r\n{\r\n  public get shaderUniform():RenderQuiltProgramUniform\r\n  {\r\n    return this._uniformBufferObjectList[0] as RenderQuiltProgramUniform;\r\n  }\r\n\r\n  public get mvpMatrix():ShaderUniform\r\n  {\r\n    return this.uniformList[0];\r\n  }\r\n\r\n  public get quiltTexture():ShaderUniform\r\n  {\r\n    return this.uniformList[1];\r\n  }\r\n\r\n  protected init():void\r\n  {\r\n    // language=GLSL\r\n    this._vertexShaderSource = `#version 300 es\r\n\r\n      in vec3 position;\r\n      in vec2 uv;\r\n      \r\n      uniform mat4 mvpMatrix;\r\n      \r\n      out vec2 iUv;\r\n      \r\n      void main(void)\r\n      {\r\n        iUv = uv;\r\n        gl_Position = mvpMatrix * vec4(position, 1.0);\r\n      }\r\n    `;\r\n\r\n    // language=GLSL\r\n    this._fragmentShaderSource = `#version 300 es\r\n      precision mediump float;\r\n      \r\n      in vec2 iUv;\r\n      \r\n      uniform sampler2D quiltTexture;\r\n      \r\n      layout (std140) uniform Uniforms {\r\n        float pitch;\r\n        float tilt;\r\n        float center;\r\n        float invView;\r\n        \r\n        vec2 flip;\r\n        vec2 tiles;\r\n        \r\n        float subp;\r\n        // float padding1;\r\n        // float padding2;\r\n        // float padding3;\r\n      } uniforms;\r\n      \r\n      out vec4 outColor;\r\n      \r\n      vec2 texArr(vec3 uvz)\r\n      {\r\n        float z = floor(uvz.z * uniforms.tiles.x * uniforms.tiles.y);\r\n        float x = (mod(z, uniforms.tiles.x) + uvz.x) / uniforms.tiles.x;\r\n        float y = (floor(z / uniforms.tiles.x) + uvz.y) / uniforms.tiles.y;\r\n        return vec2(x, y);\r\n      }\r\n      \r\n      void main(void)\r\n      {\r\n        vec4 rgb[3];\r\n        \r\n        // Flip UVs if necessary\r\n        vec3 nuv = vec3((vec2(1.0) - uniforms.flip) * iUv + uniforms.flip * (vec2(1.0) - iUv), 0.0);\r\n        \r\n        for (int i = 0; i < 3; i++)\r\n        {\r\n          nuv.z = (iUv.x + float(i) * uniforms.subp + iUv.y * uniforms.tilt) * uniforms.pitch - uniforms.center;\r\n          nuv.z = mod(nuv.z + ceil(abs(nuv.z)), 1.0);\r\n          nuv.z = (1.0 - uniforms.invView) * nuv.z + uniforms.invView * (1.0 - nuv.z);\r\n          rgb[i] = texture(quiltTexture, texArr(vec3(iUv.x, iUv.y, nuv.z)));\r\n        }\r\n        \r\n        outColor = vec4(rgb[0].r, rgb[1].g, rgb[2].b, 1.0);\r\n      }\r\n    `;\r\n\r\n    this._uniformBufferObjectList[0] = new RenderQuiltProgramUniform('Uniforms', 0);\r\n\r\n    this.attributeList[0] = {\r\n      name:'position',\r\n      stride:3,\r\n      location:-1\r\n    };\r\n\r\n    this.attributeList[1] = {\r\n      name:'uv',\r\n      stride:2,\r\n      location:-1\r\n    };\r\n\r\n    this.uniformList[0] = {\r\n      name:'mvpMatrix',\r\n      type:UniformType.MATRIX4,\r\n      location:null,\r\n      vector4:null\r\n    };\r\n\r\n    this.uniformList[1] = {\r\n      name:'quiltTexture',\r\n      type:UniformType.TEXTURE,\r\n      location:null,\r\n      texture:null,\r\n      textureIndex:0\r\n    };\r\n  }\r\n}","/*!\r\n * Copyright 2017-2019 Looking Glass Factory Inc.\r\n * All rights reserved.\r\n *\r\n * This algorithm thanks to HoloPlay.js by Looking Glass Factory Inc\r\n * refer to: https://lookingglassfactory.com/downloads/three-js-library-looking-glass/\r\n */\r\n\r\nimport {OrthoScreenObject} from '../webgl/OrthoScreenObject';\r\nimport {RenderQuiltProgram} from './RenderQuiltProgram';\r\nimport {RenderQuiltProgramUniform} from './RenderQuiltProgramUniform';\r\n\r\nexport class HoloPlay\r\n{\r\n  private static readonly WEBSOCKET_URL:string = 'ws://localhost:11222/';\r\n\r\n  private static readonly LKG_DEFAULT_CALIBRATION:LKGCalibration = {\r\n    configVersion:'1.0',\r\n    serial:'00112',\r\n    pitch:{value:49.825218200683597},\r\n    slope:{value:5.2160325050354},\r\n    center:{value:-0.23396748304367066},\r\n    viewCone:{value:40.0},\r\n    invView:{value:1.0},\r\n    verticalAngle:{value:0.0},\r\n    DPI:{value:338.0},\r\n    screenW:{value:2560.0},\r\n    screenH:{value:1600.0},\r\n    flipImageX:{value:0.0},\r\n    flipImageY:{value:0.0},\r\n    flipSubp:{value:0.0}\r\n  };\r\n\r\n  private calibration:LKGCalibration;\r\n\r\n  private orthoScreen:OrthoScreenObject;\r\n  private quiltProgram:RenderQuiltProgram;\r\n  private isUniformDirty:boolean;\r\n\r\n  constructor()\r\n  {\r\n  }\r\n\r\n  public creatProgram(gl2:WebGL2RenderingContext):void\r\n  {\r\n    this.orthoScreen = new OrthoScreenObject();\r\n    this.orthoScreen.createBuffer(gl2);\r\n\r\n    this.quiltProgram = new RenderQuiltProgram();\r\n    this.quiltProgram.creatProgram(gl2);\r\n    this.quiltProgram.shaderUniform.createBuffer(gl2);\r\n    this.quiltProgram.mvpMatrix.matrix4 = this.orthoScreen.screenMatrix;\r\n\r\n    this.isUniformDirty = false;\r\n  }\r\n\r\n  public async initCalibration():Promise<void>\r\n  {\r\n    return new Promise((resolve) =>\r\n    {\r\n      let osName:OSType = OSType.Unknown;\r\n      const appVersion:string = navigator.appVersion;\r\n      if(appVersion.indexOf('Win') !== -1)\r\n      {\r\n        osName = OSType.Windows;\r\n      }\r\n      else if(appVersion.indexOf('Mac') !== -1)\r\n      {\r\n        osName = OSType.MacOS;\r\n      }\r\n      else if(appVersion.indexOf('X11') !== -1)\r\n      {\r\n        osName = OSType.UNIX;\r\n      }\r\n      else if(appVersion.indexOf('Linux') !== -1)\r\n      {\r\n        osName = OSType.Linux;\r\n      }\r\n\r\n      const ws:WebSocket = new WebSocket(HoloPlay.WEBSOCKET_URL);\r\n\r\n      const timeout:number = setTimeout(() =>\r\n      {\r\n        console.log('Calibration not found.');\r\n        ws.close();\r\n        this.setCalibration(null);\r\n        resolve();\r\n      }, 800);\r\n      ws.onmessage = (event:MessageEvent) =>\r\n      {\r\n        clearTimeout(timeout);\r\n        ws.close();\r\n        this.setCalibration(event.data);\r\n        resolve();\r\n      };\r\n      ws.onerror = (event:Event) =>\r\n      {\r\n        if(confirm('Three.js driver not detected! Click OK to download. If you have already installed the driver, please make sure port 11222 is open.'))\r\n        {\r\n          if(osName === OSType.Windows)\r\n          {\r\n            window.location.href = 'https://s3.amazonaws.com/static-files.lookingglassfactory.com/WebCalibrationBridge/LKG_ThreeJsDriver_Win.exe';\r\n          }\r\n          else if(osName === OSType.MacOS)\r\n          {\r\n            window.location.href = 'https://s3.amazonaws.com/static-files.lookingglassfactory.com/WebCalibrationBridge/LKG_ThreeJsDriver_Mac.pkg';\r\n          }\r\n          else\r\n          {\r\n            alert('Only Windows and OSX operating systems are currently supported for the Browser LKG.');\r\n          }\r\n        }\r\n        clearTimeout(timeout);\r\n        ws.close();\r\n        this.setCalibration(null);\r\n        resolve();\r\n      };\r\n    });\r\n  }\r\n\r\n  private setCalibration(calibrationStr:string):void\r\n  {\r\n    let calibration:LKGCalibration;\r\n    const errorMessage:string = 'No Looking Glass display connected; using default calibration data. Please ensure your Looking Glass is connected to your computer via USB and reload the page.';\r\n    if(calibrationStr)\r\n    {\r\n      try\r\n      {\r\n        calibration = JSON.parse(calibrationStr);\r\n        console.log('New calibration loaded.');\r\n      } catch(e)\r\n      {\r\n        console.log(errorMessage);\r\n        calibration = HoloPlay.LKG_DEFAULT_CALIBRATION;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      console.log(errorMessage);\r\n      calibration = HoloPlay.LKG_DEFAULT_CALIBRATION;\r\n    }\r\n    console.log(calibration);\r\n    this.calibration = calibration;\r\n    this.setShaderValues();\r\n\r\n    window.addEventListener('resize', () =>\r\n    {\r\n      this.setShaderValues();\r\n    });\r\n  }\r\n\r\n  private setShaderValues():void\r\n  {\r\n    const uniform:RenderQuiltProgramUniform = this.quiltProgram.shaderUniform;\r\n\r\n    const dpi:number = this.calibration.DPI.value;\r\n    const pitch:number = this.calibration.pitch.value;\r\n    const slope:number = this.calibration.slope.value;\r\n    const screenH:number = this.calibration.screenH.value;\r\n    const screenW:number = this.calibration.screenW.value;\r\n    const center:number = this.calibration.center.value;\r\n    const flipX:number = this.calibration.flipImageX.value;\r\n    const flipY:number = this.calibration.flipImageY.value;\r\n    const invView:number = this.calibration.invView.value;\r\n\r\n    //  const screenInches:number = screenW / dpi;\r\n    const screenInches:number = window.innerWidth / dpi;\r\n    let newPitch:number = pitch * screenInches;\r\n\r\n    // account for tilt in measuring pitch horizontally\r\n    newPitch *= Math.cos(Math.atan(1.0 / slope));\r\n    uniform.pitch = newPitch;\r\n\r\n    // tilt\r\n    let newTilt:number = window.innerHeight / (window.innerWidth * slope);\r\n    if(flipX === 1)\r\n    {\r\n      newTilt *= -1;\r\n    }\r\n    uniform.tilt = newTilt;\r\n\r\n    // center\r\n    // I need the relationship between the amount of pixels I have moved over to the amount of lenticulars I have jumped\r\n    // ie how many pixels are there to a lenticular?\r\n    uniform.center = center;\r\n\r\n    // should we invert?\r\n    uniform.invView = invView;\r\n\r\n    // Should we flip it for peppers?\r\n    uniform.flip = new Float32Array([flipX, flipY]);\r\n\r\n    uniform.subp = 1 / (screenW * 3);\r\n\r\n    // tiles\r\n    // uniform.tiles = new Float32Array([this.tilesX, this.tilesY]);\r\n\r\n    this.isUniformDirty = true;\r\n  }\r\n\r\n  public setTexture(texture:WebGLTexture, tilesX:number, tilesY:number):void\r\n  {\r\n    this.quiltProgram.quiltTexture.texture = texture;\r\n    this.quiltProgram.shaderUniform.tiles = new Float32Array([tilesX, tilesY]);\r\n\r\n    this.isUniformDirty = true;\r\n  }\r\n\r\n  public renderView(gl2:WebGL2RenderingContext):void\r\n  {\r\n    if(this.isUniformDirty)\r\n    {\r\n      this.quiltProgram.shaderUniform.updateBuffer(gl2);\r\n    }\r\n    gl2.bindFramebuffer(gl2.FRAMEBUFFER, null);\r\n    gl2.viewport(0, 0, window.innerWidth, window.innerHeight);\r\n    gl2.clear(gl2.COLOR_BUFFER_BIT | gl2.DEPTH_BUFFER_BIT);\r\n\r\n    this.orthoScreen.bindBuffer(gl2, this.quiltProgram);\r\n    this.quiltProgram.bindShader(gl2);\r\n    gl2.drawElements(gl2.TRIANGLES, this.orthoScreen.numIndices, gl2.UNSIGNED_SHORT, 0);\r\n  }\r\n}\r\n\r\ndeclare const enum OSType\r\n{\r\n  'Unknown',\r\n  'Windows',\r\n  'MacOS',\r\n  'UNIX',\r\n  'Linux'\r\n}\r\n\r\ndeclare interface LKGCalibrationValue\r\n{\r\n  value:number;\r\n}\r\n\r\ndeclare interface LKGCalibration\r\n{\r\n  configVersion:string;\r\n  serial:string;\r\n  pitch:LKGCalibrationValue;\r\n  slope:LKGCalibrationValue;\r\n  center:LKGCalibrationValue;\r\n  viewCone:LKGCalibrationValue;\r\n  invView:LKGCalibrationValue;\r\n  verticalAngle:LKGCalibrationValue;\r\n  DPI:LKGCalibrationValue;\r\n  screenW:LKGCalibrationValue;\r\n  screenH:LKGCalibrationValue;\r\n  flipImageX:LKGCalibrationValue;\r\n  flipImageY:LKGCalibrationValue;\r\n  flipSubp:LKGCalibrationValue;\r\n}\r\n","import {determineTilingType} from './project/determineTilingType';\r\nimport {HoloPlay} from './project/HoloPlay';\r\n\r\nexport class Main\r\n{\r\n  private canvas:HTMLCanvasElement;\r\n  private context:WebGL2RenderingContext;\r\n\r\n  private textureList:QuiltTexture[];\r\n  private currentTextureIndex:number;\r\n\r\n  private holoplay:HoloPlay;\r\n  private holoplayGamepad:HoloplayGamepadState;\r\n\r\n  constructor()\r\n  {\r\n    console.log(new Date());\r\n    this.init();\r\n  }\r\n\r\n  private async init():Promise<void>\r\n  {\r\n    // Canvas setup\r\n    const canvas:HTMLCanvasElement = document.getElementById(('myCanvas')) as HTMLCanvasElement;\r\n    this.canvas = canvas;\r\n\r\n    // Create WebGL2RenderingContext\r\n    const context:WebGL2RenderingContext = canvas.getContext('webgl2') as WebGL2RenderingContext;\r\n    if(!context)\r\n    {\r\n      document.body.className = 'error';\r\n      return;\r\n    }\r\n    context.clearColor(0.2, 0.2, 0.2, 1.0);\r\n    context.enable(context.CULL_FACE);\r\n    context.pixelStorei(context.UNPACK_FLIP_Y_WEBGL, 1);\r\n    this.context = context;\r\n\r\n    this.holoplay = new HoloPlay();\r\n    this.holoplay.creatProgram(context);\r\n    await this.holoplay.initCalibration();\r\n\r\n    this.textureList = [];\r\n    this.currentTextureIndex = -1;\r\n\r\n    window.addEventListener('resize', () => this.onRresize());\r\n    this.onRresize();\r\n    this.setupFullScreen();\r\n\r\n    document.addEventListener('dragover', (event) => this.handleDragOver(event));\r\n    document.addEventListener('drop', (event) => this.handleFileSelect(event));\r\n\r\n    document.addEventListener('keydown', (event) => this.onKeydown(event));\r\n\r\n    this.holoplayGamepad = {\r\n      index:-1,\r\n      square:false,\r\n      left:false,\r\n      right:false,\r\n      circle:false\r\n    };\r\n    window.addEventListener('gamepadconnected', (event:GamepadEvent) => this.gamepadHandler(event, true));\r\n    window.addEventListener('gamepaddisconnected', (event:GamepadEvent) => this.gamepadHandler(event, false));\r\n\r\n    context.clear(context.COLOR_BUFFER_BIT);\r\n  }\r\n\r\n  private render():void\r\n  {\r\n    if(this.textureList.length)\r\n    {\r\n      // render\r\n      this.holoplay.renderView(this.context);\r\n    }\r\n  }\r\n\r\n  private onRresize():void\r\n  {\r\n    const width:number = window.innerWidth;\r\n    const height:number = window.innerHeight;\r\n    this.canvas.width = width;\r\n    this.canvas.height = height;\r\n\r\n    this.render();\r\n  }\r\n\r\n  private setupFullScreen():void\r\n  {\r\n    const newHTML:string =\r\n      '<input type=\"button\" style=\"margin:20px; position:fixed; top:0px; right:0px; z-index: 10000; height:50px; width:150px;\" id=\"fullscreenButton\" value=\"Enter Full Screen Mode\"/>';\r\n\r\n    const buttonDiv:HTMLDivElement = document.createElement('div');\r\n    buttonDiv.innerHTML = newHTML;\r\n    buttonDiv.setAttribute('id', 'fullscreen');\r\n    document.body.appendChild(buttonDiv);\r\n\r\n    document.getElementById('fullscreen').addEventListener('click', () =>\r\n    {\r\n      if(this.canvas.requestFullscreen)\r\n      {\r\n        this.canvas.requestFullscreen();\r\n      }\r\n    });\r\n  }\r\n\r\n  private async handleFileSelect(event:DragEvent):Promise<void>\r\n  {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n\r\n    const oldLength:number = this.textureList.length;\r\n\r\n    const items:DataTransferItemList = event.dataTransfer.items;\r\n    if(items.length && items[0].webkitGetAsEntry)\r\n    {\r\n      const entries:any[] = [];\r\n      for(let i:number = 0; i < items.length; i++)\r\n      {\r\n        // get entry by webkitGetAsEntry() first because DataTransferItem will be lost in await function.\r\n        entries[i] = items[i].webkitGetAsEntry();\r\n      }\r\n\r\n      for(let i:number = 0; i < entries.length; i++)\r\n      {\r\n        await this.traverseEntry(this.textureList, entries[i]);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      for(let i:number = 0; i < items.length; i++)\r\n      {\r\n        this.addFile(this.textureList, items[i].getAsFile());\r\n      }\r\n    }\r\n\r\n    if(this.textureList.length > oldLength)\r\n    {\r\n      this.currentTextureIndex = oldLength;\r\n      await this.setTexture();\r\n\r\n      this.render();\r\n\r\n      document.getElementById('howtouse').style.display = 'none';\r\n    }\r\n  }\r\n\r\n  private async traverseEntry(list:QuiltTexture[], entry:any):Promise<void>\r\n  {\r\n    if(entry.isFile)\r\n    {\r\n      await new Promise((resolve) =>\r\n      {\r\n        entry.file((file:any) =>\r\n        {\r\n          this.addFile(list, file);\r\n          resolve();\r\n        });\r\n      });\r\n    }\r\n    else if(entry.isDirectory)\r\n    {\r\n      const reader:any = entry.createReader();\r\n      await new Promise((resolve) =>\r\n      {\r\n        reader.readEntries(\r\n          async(results:any) =>\r\n          {\r\n            for(let i:number = 0; i < results.length; i++)\r\n            {\r\n              await this.traverseEntry(this.textureList, results[i]);\r\n            }\r\n            resolve();\r\n          },\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  private addFile(list:QuiltTexture[], file:File):void\r\n  {\r\n    if(file.type.match(/image\\/(png|jpg|jpeg)/) || (file.type === '' && file.name.match(/(png|jpg|jpeg)$/)))\r\n    {\r\n      list.push({\r\n        texture:null,\r\n        tileX:0,\r\n        tileY:0,\r\n        file:file\r\n      });\r\n    }\r\n  }\r\n\r\n  private async loadDataURL(file:File):Promise<string>\r\n  {\r\n    return new Promise((resolve) =>\r\n    {\r\n      const reader:FileReader = new FileReader();\r\n      reader.onload = (event:any) =>\r\n      {\r\n        resolve(event.target.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n  }\r\n\r\n  private async loadImage(url:string):Promise<HTMLImageElement>\r\n  {\r\n    return new Promise((resolve) =>\r\n    {\r\n      const image:HTMLImageElement = new Image();\r\n      image.onload = () => resolve(image);\r\n      image.src = url;\r\n    });\r\n  }\r\n\r\n  private createTexture(image:HTMLImageElement):WebGLTexture\r\n  {\r\n    const gl:WebGLRenderingContext = this.context;\r\n    const texture:WebGLTexture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n    return texture;\r\n  }\r\n\r\n  private async setTexture():Promise<void>\r\n  {\r\n    const quiltTexture:QuiltTexture = this.textureList[this.currentTextureIndex];\r\n    if(quiltTexture.file)\r\n    {\r\n      const dataURL:string = await this.loadDataURL(quiltTexture.file);\r\n      const image:HTMLImageElement = await this.loadImage(dataURL);\r\n      quiltTexture.texture = this.createTexture(image);\r\n\r\n      quiltTexture.file = undefined;\r\n\r\n      const tiles:{tilesX:number, tilesY:number} = determineTilingType(image);\r\n      quiltTexture.tileX = tiles.tilesX;\r\n      quiltTexture.tileY = tiles.tilesY;\r\n    }\r\n    this.holoplay.setTexture(quiltTexture.texture, quiltTexture.tileX, quiltTexture.tileY);\r\n  }\r\n\r\n  private handleDragOver(event:DragEvent):void\r\n  {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'copy';\r\n  }\r\n\r\n  private onKeydown(event:KeyboardEvent):void\r\n  {\r\n    switch(event.code)\r\n    {\r\n      case 'ArrowUp':\r\n      case 'ArrowLeft':\r\n        this.changeImage(false);\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'ArrowRight':\r\n        this.changeImage(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private async gamepadHandler(event:GamepadEvent, isConnected:boolean):Promise<void>\r\n  {\r\n    if(event.gamepad.id.match('HoloPlay'))\r\n    {\r\n      if(isConnected)\r\n      {\r\n        this.holoplayGamepad.index = event.gamepad.index;\r\n        this.gamepadLoop();\r\n      }\r\n      else\r\n      {\r\n        this.holoplayGamepad.index = -1;\r\n      }\r\n      console.log(event.gamepad, isConnected);\r\n    }\r\n  }\r\n\r\n  private gamepadLoop():void\r\n  {\r\n    if(this.holoplayGamepad.index !== -1)\r\n    {\r\n      const state:HoloplayGamepadState = this.holoplayGamepad;\r\n\r\n      const gamepad:Gamepad = navigator.getGamepads()[this.holoplayGamepad.index];\r\n      const square:boolean = gamepad.buttons[0].pressed;\r\n      const left:boolean = gamepad.buttons[1].pressed;\r\n      const right:boolean = gamepad.buttons[2].pressed;\r\n      const circle:boolean = gamepad.buttons[3].pressed;\r\n\r\n      if(state.square && !square)\r\n      {\r\n        // console.log('pressed: square');\r\n        this.changeImage(false);\r\n      }\r\n      if(state.left && !left)\r\n      {\r\n        // console.log('pressed: left');\r\n        this.changeImage(false);\r\n      }\r\n      if(state.right && !right)\r\n      {\r\n        // console.log('pressed: right');\r\n        this.changeImage(true);\r\n      }\r\n      if(state.circle && !circle)\r\n      {\r\n        // console.log('pressed: circle');\r\n        this.changeImage(true);\r\n      }\r\n\r\n      state.square = square;\r\n      state.left = left;\r\n      state.right = right;\r\n      state.circle = circle;\r\n\r\n      requestAnimationFrame(() => this.gamepadLoop());\r\n    }\r\n  }\r\n\r\n  private async changeImage(isNext:boolean):Promise<void>\r\n  {\r\n    if(isNext)\r\n    {\r\n      if(this.textureList.length >= 2)\r\n      {\r\n        if(this.currentTextureIndex === this.textureList.length - 1)\r\n        {\r\n          this.currentTextureIndex = 0;\r\n        }\r\n        else\r\n        {\r\n          this.currentTextureIndex += 1;\r\n        }\r\n        await this.setTexture();\r\n\r\n        this.render();\r\n      }\r\n    }\r\n    else\r\n    {\r\n      if(this.textureList.length >= 2)\r\n      {\r\n        if(this.currentTextureIndex === 0)\r\n        {\r\n          this.currentTextureIndex = this.textureList.length - 1;\r\n        }\r\n        else\r\n        {\r\n          this.currentTextureIndex -= 1;\r\n        }\r\n        await this.setTexture();\r\n\r\n        this.render();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nwindow.addEventListener('DOMContentLoaded', () =>\r\n{\r\n  new Main();\r\n});\r\n\r\ndeclare interface QuiltTexture\r\n{\r\n  texture:WebGLTexture;\r\n  tileX:number;\r\n  tileY:number;\r\n\r\n  file?:File;\r\n}\r\n\r\ndeclare interface HoloplayGamepadState\r\n{\r\n  index:number;\r\n  square:boolean;\r\n  left:boolean;\r\n  right:boolean;\r\n  circle:boolean;\r\n}"],"sourceRoot":""}